Declaraciones secuenciales en VHDL -> Sequential Statements 
-> Solo pueden ser usados dentro de los bloques process
-> Asignaciones secuenciales
-> Declaraciones IF - ELSIF - ELSE 
-> Declaraciones CASE
-> Bucles for 
-> Sentencias Wait

OJO: SOLO SE REALIZAN DENTRO DE BLOQUES PROCESS

--- Asignaciones secuenciales 
	A <= B;

-- Sentencias secuenciales IF - ELSE

	if cond1 then <- tiene la más alta prioridad
	-- Code 1a
	elsif cond2 then
	-- Code 2
	elsif cond3 then
	-- Code 3
	else 
	-- Code 4
	end if;
	
Ejemplo: Sentencia IF - ELSE 
	
	mi_proceso: process (sel, A, B, C, D) <- Lista de sensibilidad
	begin
		if sel = "00" then
			out <= A;
		elsif sel = "10" then
			out <= B;
		elsif sel = "01" then
			out <= C;
		else 
			out <= D;
		end if;
	end process mi_proceso;	

-- Sentencias secuenciales  CASE
		   _______ Expresion a analizar
		  |
		  v
	case (expresion) is 
		when opcion1 =>
			-- Codigo 1
		when opcion2 => 
			-- Codigo 2
		when others =>
			-- codigo 3
	end case;

Ejemplo: Sentencia CASE
	proceso: process (sel, A, B, C, D)
	begin
		case (sel) is
			when "00" => out <= A;
			when "01" => out <= B;
			when "10" => out <= C;
			when others => out <= D;
		end case;
	end process proceso;


-- EJEMPLO COMBINADO DE SENTENCIA IF - CASE

proceso: process (Reset, clock)
begin 
	if reset = '1' then
		out <= '0';
	elsif rising_edge (clock) then
		case (sel) is
			when "00" => out <= A;
			when "01" => out <= B;
			when "10" => out <= C;
			when others => out <= D;
		end case;
	end if;
end process proceso;
			 _______ rango de valores m to n
-- Sentencia FOR LOOP	|
			v
for VariableDeBucle in rango loop
	-- Codigo a repetirse
end loop;

Ejemplo: For - Loop

proceso: process (A, B)
begin
	for i in 0 to 2 loop
		Y(i) <= A(2 - i) and B(i);
	end loop;
end process proceso;


NOTA: LA SENTENCIA EXIT; HACE QUE SE SALGA DEL BUCLE -> BREAK;

Sentencia: Wait -> solo con propósitos de simulación no se puede sintetizar 
-> Sirve para pausar la simulación por un periodo determinado de tiempo 
-> Sirve para pausar la simulación hasta que ocurra un determinado evento

Sintaxis: 
-> wait <- espera de manera indefinida 
-> wait for xtime <- espera por un tiempo x determinado

Ejemplo:

-- Acá generamos una señal de reloj de un periodo de 20ns 
-- Cabe precisar que solo podemos usar esa señal de reloj
-- con fines de simulación o testbenchs ya que la sentencia 
-- wait no puede ser sintetizada OJO :D

clock_gen: process 
begin
	clock <= '0';
	wait for 10ns;
	clock <= '1';
	wait for 10ns;
end process clock_gen;



























